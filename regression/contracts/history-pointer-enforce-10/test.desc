CORE
main.c
--enforce-all-contracts
^EXIT=0$
^SIGNAL=0$
^\[postcondition.\d+\] file main.c line \d+ Check ensures clause: SUCCESS$
^\[postcondition.\d+\] file main.c line \d+ Check ensures clause: SUCCESS$
^\[postcondition.\d+\] file main.c line \d+ Check ensures clause: SUCCESS$
^\[bar.\d+\] line \d+ Check that p->y is assignable: SUCCESS$
^\[baz.\d+\] line \d+ Check that p is assignable: SUCCESS$
^\[baz.\d+\] line \d+ Check that p is assignable: SUCCESS$
^\[foo.\d+\] line \d+ Check that \*p->y is assignable: SUCCESS$
^\[foo.\d+\] line \d+ Check that z is assignable: SUCCESS$
^\[main.assertion.\d+\] line \d+ assertion \*\(p->y\) == 7: SUCCESS$
^\[main.assertion.\d+\] line \d+ assertion \*\(p->y\) == -1: SUCCESS$
^VERIFICATION SUCCESSFUL$
--
--
This test checks that history variables are supported for structs, symbols, and
struct members. By using the --enforce-all-contracts flag, the postcondition
(with history variable) is asserted. In this case, this assertion should pass.
